#include <vector>
#include <unordered_map>
class Solution {
    public:
        vector<int> topKFrequent(vector<int>& nums, int k) {
            unordered_map<int, int> mp;
            for ( int i = 0 ; i < nums.size(); i++) mp[nums[i]]++;
    
            priority_queue<pair<int,int>> maxh; 
            unordered_map<int,int>::iterator it = mp.begin();
            while(it!= mp.end()){
                maxh.push({it->second,it->first});
                it++;
            }
    
            mp.clear();
            vector<int> ans;
            while(k>0){
                ans.push_back(maxh.top().second);
                maxh.pop();
                k--;
            }
    
            return ans;
    
        }
    };


    int main() {
        Solution s;
        std::vector<int> sample = { 2,2,4,4,4,7,7,7,7,3,2,7,7,8,8,9,0,7,7,3};
        auto ans = s.topKFrequent(sample, 2);
        auto i = ans.begin();
        while( i != ans.end()){
            std::cout << *i;
        }

        return 0;
    }